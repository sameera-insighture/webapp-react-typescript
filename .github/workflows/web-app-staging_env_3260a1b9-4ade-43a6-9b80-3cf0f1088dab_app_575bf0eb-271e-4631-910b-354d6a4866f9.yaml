name: >-
  web-app-staging_env_3260a1b9-4ade-43a6-9b80-3cf0f1088dab_app_575bf0eb-271e-4631-910b-354d6a4866f9
  Pipeline (Skyu Generated)
'on':
  push:
    branches:
      - staging
      - release/*
  workflow_dispatch: {}
  repository_dispatch:
    types: pipeline_ddeef57d-5f52-4222-b801-4dfae36a9c47
env:
  ENCODED_PIPELINE_SECRET: >-
    ${{secrets.WEBAPPREACTTYPESCRIPT_ENV_3260A1B94ADE43A69B803CF0F1088DAB_APP_575BF0EB271E4631910B354D6A4866F9_WEBAPPSTAGING_ENV_3260A1B94ADE43A69B803CF0F1088DAB_APP_575BF0EB271E4631910B354D6A4866F9}}
  BUILD_ENVIRONEMENT_VERSION: latest
  WEB_APP_BUILD_FOLDER: build
  S3_SYNC_URL: >-
    s3://skyu-project-84dd6b29-7059-49fc-9ac2-5694fc59b64d-webapps/staging/sameera-webaoo-2024-01-27
  WEB_APP_INSTALL_DEPS_COMMAND: npm i
  WEB_APP_BUILD_COMMAND: npm run build
  VITE_ENV: dev
  VITE_REGION: us-east-1
  IMAGE_TAG: ${{github.event.client_payload.commitId || github.sha}}
  DEPLOY_STEP_SHOULD_DEPLOY: 'false'
jobs:
  build-and-sync-web-app:
    name: Build And Sync Web App
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Start
        run: |2-

              echo " Starting GitHub Action!" && 
              echo "STEPS_CAN_PROCEED=true" >> $GITHUB_ENV
              
      - name: 'Run :: Checkout repository'
        uses: actions/checkout@v2
      - name: 'Run :: Checkout Specific Commit'
        if: ${{ github.event.client_payload.commitId != null }}
        run: git checkout ${{ github.event.client_payload.commitId }}
      - name: 'Run :: Decoding Secrets 6876a878-1f5b-41a6-aff7-2ee9058443c4'
        run: |2-

                  if [ ! -x "$(command -v jq)" ]; then
                    echo "jq not found, installing..."
                    sudo apt-get update
                    sudo apt-get install -y jq
                  fi
                  echo "${{ env.ENCODED_PIPELINE_SECRET }}" | base64 --decode | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while read line; do echo "$line" >> $GITHUB_ENV; echo "::add-mask::${line#*=}"; done
                
      - name: 'Run :: Configure AWS credentials 8c2961a0-63a4-49df-9407-d813d00522ef'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.roleARN }}
          role-session-name: skyu-pipeline-assume-role-session
          aws-region: ${{ env.region }}
      - name: 'Run :: Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.BUILD_ENVIRONEMENT_VERSION }}
      - name: 'Run :: Install Web App Dependancies'
        run: ${{ env.WEB_APP_INSTALL_DEPS_COMMAND }}
      - name: 'Run :: Build Web App'
        run: ${{ env.WEB_APP_BUILD_COMMAND }} && ls -R
      - name: 'Run :: Sync Web App with S3 bucket'
        run: aws s3 sync ${{ env.WEB_APP_BUILD_FOLDER }} ${{ env.S3_SYNC_URL }}
  deploy-web-app:
    name: Deploy Web App
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: 'Run :: Decoding Secrets 9e5542e0-870b-4102-b100-c74563803c34'
        run: |2-

                  if [ ! -x "$(command -v jq)" ]; then
                    echo "jq not found, installing..."
                    sudo apt-get update
                    sudo apt-get install -y jq
                  fi
                  echo "${{ env.ENCODED_PIPELINE_SECRET }}" | base64 --decode | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while read line; do echo "$line" >> $GITHUB_ENV; echo "::add-mask::${line#*=}"; done
                
      - name: 'Run :: Deploy and Notify Resource Service'
        run: |2-

              response=$(curl -d "appType=WebApp&appVersionId=${{ env.DEPLOYMENT_APP_VERSION_ID }}&tag=${{ env.IMAGE_TAG }}&containerName=${{ env.DEPLOYMENT_CONTAINER_NAME }}&shouldDeploy=${{env.DEPLOY_STEP_SHOULD_DEPLOY}}&pipelineRunId=${{ github.run_id }}&commitDetails[commitHash]=${{ github.sha }}&commitDetails[commitAvatar]=https://github.com/${{ github.event.head_commit.author.name }}.png&commitDetails[commitTime]=${{ github.event.head_commit.timestamp }}&commitDetails[commitMessage]=\"${{ github.event.head_commit.message }}\"&commitDetails[commitUser]=${{ github.event.head_commit.author.name }}" -X PATCH -H 'Authorization: ${{ env.SERVICE_ACC_ACCESS_TOKEN }}' -H 'x-organization-id: ${{ env.DEPLOYMENT_ORGANIZATION_ID }}' -H 'x-project-id: ${{ env.DEPLOYMENT_PROJECT_ID }}' -H 'x-environment-id: ${{ env.DEPLOYMENT_ENVIRONMENT_ID }}' -H 'x-application-id: ${{ env.DEPLOYMENT_APPLICATION_ID }}' -H 'x-auth-by: sa' -H 'Content-Type: application/x-www-form-urlencoded' '${{ env.DEPLOYMENT_ENDPOINT }}')

              if echo "$response" | grep -q '"success":true'; then
                echo "SUCCESS :: $response"
              else
                echo "FAILED :: $response"
              fi
            
